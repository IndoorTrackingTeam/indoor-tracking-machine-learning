name: Train Model

on:
  workflow_dispatch:
    inputs:
      manual_deploy:
        description: "Manual Deploy"
        required: true
        type: boolean
        default: true
  push:
    branches:
      - main

env:
  IMAGE: machine-learning-api
  PORT: 8000
  REGION: us-east1
  CPU: 2
  MEMORY: 512Mi
  TIMEOUT: 300
  CONCURRENCY: 80
  MAX_INSTANCES: 1
  MIN_INSTANCES: 0

jobs:
  setup-build-publish:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

#    ## Set up the gcould CLI
#    - id: 'auth'
#      uses: google-github-actions/auth@v2
#      with:
#        credentials_json: ${{ secrets.GCP_SA_KEY }}
#
#    - name: Set up Cloud SDK
#      uses: google-github-actions/setup-gcloud@v2
#
#    - name: Use gcloud CLI
#      run: gcloud info
#
#    - name: Login to GCR
#      uses: docker/login-action@v1
#      with:
#        registry: gcr.io
#        username: _json_key
#        password: ${{ secrets.GCP_SA_KEY }}
#
#    ## Configure Docker
#    - name: Docker configuration
#      run: |-
#        gcloud auth configure-docker \
#        us-east1-docker.pkg.dev

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Cache Python packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('api/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --no-cache-dir -r api/requirements.txt

    - name: Run Python script
      run: |
        python training/model_training_service.py   

#    - name: Move model to API
#      run: |
#        mv $MODEL_PATH api/$MODEL_PATH

    - name: Print current directory
      run: pwd

    - name: List files in model directory
      run: |
        ls -R 

#    - name: Build
#      run: |-
#        docker build \
#          --tag "us-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/ar-backend/${{ env.IMAGE }}-dev:latest" \
#          ./api
#
#    - name: Publish
#      run: |-
#        docker push "us-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/ar-backend/${{ env.IMAGE }}-dev:latest"
#
#    - name: Deploy
#      run: |
#        gcloud run deploy run-${{ env.IMAGE }}-dev \
#        --image us-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/ar-backend/${{ env.IMAGE }}-dev:latest \
#        --platform managed \
#        --allow-unauthenticated \
#        --cpu=$CPU \
#        --port=$PORT \
#        --memory=$MEMORY \
#        --region $REGION \
#        --timeout=$TIMEOUT \
#        --concurrency=$CONCURRENCY \
#        --min-instances=$MIN_INSTANCES \
#        --max-instances=$MAX_INSTANCES \
#        --set-env-vars=MODEL=$MODEL \
#        --set-env-vars=MODEL_PATH=$MODEL_PATH